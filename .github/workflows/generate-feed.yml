name: Generate Pinterest RSS Feed

on:
  schedule:
    - cron: '0 1 * * *' # Menjalankan sekali setiap hari jam 1 pagi (UTC)
  workflow_dispatch: # Tombol untuk menjalankan manual

jobs:
  build-feed:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Generate feed.xml
        shell: python
        run: |
          import os
          import random
          import html
          from datetime import datetime, timezone
          from xml.etree.ElementTree import Element, SubElement, tostring
          from xml.dom import minidom
          import urllib.parse

          # --- 1. Konfigurasi Awal ---
          SPINTEXT = ['Best', 'Easy', 'Delicious', 'Amazing', 'Flavorful', 'Simple Ideas', 'Yummy', 'Secret', 'Insanely', 'Viral', 'Effortless', 'Ultimate', 'Quick', 'Decadent', 'Effortless', 'Mind-blowing', 'Unbelievable', 'Foolproof', 'Revolutionary', 'Addictive', 'Legendary', 'Heavenly', 'Surprising', 'Simple', 'Incredible', 'Perfect', 'Irresistible']
          GITHUB_USERNAME = "${{ github.repository_owner }}"
          GITHUB_REPO_NAME = "${{ github.event.repository.name }}"
          
          # --- 2. Baca Semua File Konten ---
          try:
              all_content_files = [f for f in os.listdir('content') if f.endswith('.txt')]
              if not all_content_files:
                  print("⚠️ Tidak ada file konten (.txt) yang ditemukan di direktori 'content'.")
                  exit()
          except FileNotFoundError:
              print("❌ Direktori 'content' tidak ditemukan.")
              exit()

          # --- 3. Buat Struktur Dasar RSS Feed ---
          rss = Element('rss', {'version': '2.0', 'xmlns:atom': 'http://www.w3.org/2005/Atom'})
          channel = SubElement(rss, 'channel')
          SubElement(channel, 'title').text = f"{GITHUB_REPO_NAME.replace('-', ' ').title()} Recipes"
          SubElement(channel, 'link').text = f"https://{GITHUB_USERNAME}.github.io/{GITHUB_REPO_NAME}/"
          SubElement(channel, 'description').text = f"Kumpulan resep masakan dari {GITHUB_REPO_NAME}"
          SubElement(channel, 'language').text = 'id-id'

          # --- 4. Bangun XML Feed ---
          for filename in all_content_files:
              filepath = os.path.join('content', filename)
              with open(filepath, 'r', encoding='utf-8') as f:
                  content = f.read().strip()
              
              title = os.path.splitext(filename)[0].replace('-', ' ').title()
              link = f"https://{GITHUB_USERNAME}.github.io/{GITHUB_REPO_NAME}/{urllib.parse.quote(os.path.splitext(filename)[0])}.html"
              
              description_text = f"Temukan resep {title}, cara membuat, dan bahan-bahannya di sini. {content}"
              encoded_keyword = urllib.parse.quote(title)
              
              # --- PERUBAHAN DI SINI ---
              # Memilih kata acak dari SPINTEXT dan menggabungkannya ke URL gambar
              random_prefix = random.choice(SPINTEXT)
              encoded_prefix = urllib.parse.quote(random_prefix)
              image_url = f"https://tse1.mm.bing.net/th?q={encoded_prefix}%20{encoded_keyword}&w=800&h=1200&c=7&rs=1&p=0"
              
              item = SubElement(channel, 'item')
              SubElement(item, 'title').text = title
              SubElement(item, 'link').text = link
              SubElement(item, 'description').text = description_text
              SubElement(item, 'pubDate').text = datetime.now(timezone.utc).strftime('%a, %d %b %Y %H:%M:%S GMT')
              
              SubElement(item, 'enclosure', {
                  'url': image_url,
                  'type': 'image/jpeg'
              })\n
          # --- 5. Tulis ke File feed.xml ---
          xml_str = tostring(rss, encoding='unicode')
          dom = minidom.parseString(xml_str)
          pretty_xml_str = dom.toprettyxml(indent="  ")
          final_xml_output = pretty_xml_str.lstrip()
          
          with open('feed.xml', 'w', encoding='utf-8') as f:
              f.write(final_xml_output)
          
          print("✅ File feed.xml berhasil dibuat dengan deskripsi dinamis.")

      - name: Commit and Push feed.xml
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add feed.xml
          if git diff --staged --quiet; then
            echo "Tidak ada perubahan pada feed.xml, tidak perlu commit."
          else
            git commit -m "Update feed.xml"
            git push
          fi
